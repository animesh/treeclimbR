% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scoreBP.R
\name{scoreBP}
\alias{scoreBP}
\title{Calculate the score for each node of the tree}
\usage{
scoreBP(tse, onRow = TRUE, groupCol, normLibSize, n = 100,
  assayNum = 1)
}
\arguments{
\item{tse}{a \code{TreeSummarizedExperiment} object (see
\code{\link[TreeSummarizedExperiment]{TreeSummarizedExperiment}}.}

\item{onRow}{a logical value, TRUE or FALSE. If true, the score value is
calculated for nodes of the row tree; otherwise, nodes of the column tree.}

\item{groupCol}{a column name. The column provides information about the
experimental groups that samples belong to.}

\item{normLibSize}{a logical value, TRUE or FALSE. If true, samples are
scaled to have the same library size that is the maximum library size of
the provided samples.}

\item{n}{the number of bootstrap.}

\item{assayNum}{a numeric value to decide which \code{assays} table is used
to calculate the score.}
}
\description{
\code{scoreBP} calculates score values for nodes of the tree using the
Bootstrap method.
}
\examples{
library(TreeSummarizedExperiment)
library(ggtree)
 
# tree
data("tinyTree")
# We simulate a count table below to have abundance changed only on two
# colored branches
ggtree(tinyTree, size = 2)+
   geom_text2(aes(label = node), color = "darkblue",
               hjust = -0.5, vjust = 0.7, size = 6) +
   geom_hilight(node = 18, fill = "blue", alpha = 0.3) +
   geom_hilight(node = 13, fill = "orange", alpha = 0.3) +
   xlim(c(0, 3))
    
    
# count table
set.seed(1)
p1 <- rep(0.1, 10)
p2 <- c(rep(0.04, 3), rep(0.19, 2), rep(0.1, 5))
n <- 50   # the number of replicates
count <- cbind(rmultinom(n = n, size = 100, prob = p1),
              rmultinom(n = n, size = 100, prob = p2))
#rowname(count) <- tinyTree$tip.label

rowD <- data.frame(Truth = rep(c(TRUE, FALSE), each = 5),
                   stringsAsFactors = FALSE)
colD <- data.frame(group = rep(LETTERS[1:2], each = n))
 
 # build a TreeSummarizedExperiment object to store data on the leaf level
 tse1 <- TreeSummarizedExperiment(assays = list(count), 
                                  rowData = rowD,
                                  colData = colD,
                                  rowTree = tinyTree, 
                                  rowNodeLab = tinyTree$tip.label)
                                  
# aggregate data to have data availabel for all nodes
# data on an internal node is the sum of counts from its descendants 
tse2 <- aggData(x = tse1, onRow = TRUE, FUN = sum, message = TRUE)

#' # output score
score <- scoreBP(tse = tse2, onRow = TRUE, 
                 groupCol = "group", normLibSize = TRUE,
                 n = 100, assayNum = 1)
}
\author{
Ruizhu HUANG
}
