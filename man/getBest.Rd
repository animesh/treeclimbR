% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getBest.R
\name{getBest}
\alias{getBest}
\title{run levels to find candidates that are expected to control FDR on leaf level}
\usage{
getBest(tree, levels, score_data, node_column, p_column, sign_column,
  method = "BH", limit_rej = 0.05, message = FALSE)
}
\arguments{
\item{tree}{A phylo object.}

\item{levels}{A list of levels that is the output of
\code{\link{searchLevel}}.}

\item{score_data}{A data frame includes at least one column about the nodes,
one column about the p value (\code{p_column}) and one column about the
direction of change (\code{sign_column}).}

\item{node_column}{The name of the column that gives the node information.}

\item{p_column}{The name of the column that gives p values of nodes.}

\item{sign_column}{The name of the column that gives the direction of the
difference.}

\item{method}{method The multiple testing correction method. Please refer to the
argument \code{method} in \code{\link[stats]{p.adjust}}. Default is "BH".}

\item{limit_rej}{The FDR level. Default is 0.05.}

\item{message}{A logical value, TRUE or FALSE. Default is FALSE. If TRUE, the
message about running process is printed out.}
}
\value{
a list.
  \describe{
  \item{\code{candidate_best}}{the best candidate level}
  \item{\code{output}}{the result of best candidate level}
  \item{\code{candidate_list}}{a list of candidates}
  \item{\code{level_info}}{the information of all candidates}
  \item{FDR}{the specified FDR level}
  \item{method}{the method to perform multiple test correction.}
  }
 More details about columns in \code{level_info}.
 \itemize{
 \item T the thresholds
 \item r the upper limit of T to control FDR on the leaf level
 \item is_valid whether the threshold is in the range to control leaf FDR
 \item \code{limit_rej} the specified FDR
 \item \code{level_name} the name of the candidate level
 \item \code{rej_leaf} the number of rejection on the leaf level
 \item \code{rej_node} the number of rejection on the tested candidate level
 }
}
\description{
\code{getBest} run levels to find candidates that are expected to control
FDR on leaf level
}
\examples{
library(TreeSummarizedExperiment)
library(ggtree)

data(tinyTree)
ggtree(tinyTree, branch.length = "none") +
   geom_text2(aes(label = node)) +
   geom_hilight(node = 13, fill = "blue", alpha = 0.5) +
   geom_hilight(node = 18, fill = "orange", alpha = 0.5)
set.seed(2)
pv <- runif(19, 0, 1)
pv[c(1:5, 13, 14, 18)] <- runif(8, 0, 0.001)

fc <- sample(c(-1, 1), 19, replace = TRUE)
fc[c(1:3, 13, 14)] <- 1
fc[c(4, 5, 18)] <- -1
df <- data.frame(node = 1:19,
                 pvalue = pv,
                 foldChange = fc)
ll <- getCand(tree = tinyTree, score_data = df,
                  node_column = "node", 
                  p_column = "pvalue", 
                  sign_column = "foldChange")
cc <- getBest(tree = tinyTree, levels = ll$candidate_list, 
              score_data = df,
              node_column = "node", 
              p_column = "pvalue", 
              sign_column = "foldChange",
              limit_rej = 0.01)

}
\author{
Ruizhu Huang
}
