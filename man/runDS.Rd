% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runDS.R
\name{runDS}
\alias{runDS}
\title{Test for differential state using edgeR}
\usage{
runDS(SE, tree, option = c("glm", "glmQL"), design = NULL,
  contrast = NULL, filter_min_count = 10,
  filter_min_total_count = 15, filter_large_n = 10,
  filter_min_prop = 0.7, normalize = TRUE, normalize_method = "TMM",
  group_column = "group_id", design_terms = "group_id",
  message = TRUE, ...)
}
\arguments{
\item{SE}{A SummarizedExperiment object.}

\item{tree}{A phylo object. Each matrix in \strong{assays} (of \code{SE})
stores data on one node of the tree.}

\item{option}{\code{"glm"} or \code{"glmQL"}. If \code{"glm"},
\code{\link[edgeR]{glmFit}} and \code{\link[edgeR]{glmLRT}} are used;
otherwise, \code{\link[edgeR]{glmQLFit}} and
\code{\link[edgeR]{glmQLFTest}} are used. Details about the difference
between two options are in the help page of \code{\link[edgeR]{glmQLFit}}.}

\item{design}{A numeric matrix. It must be of full column rank. Defaults to
use all columns of sample annotation data to create the design matrix. The
sample annotation data is stored in the \code{colData} of \code{tse} when
\code{onRow = TRUE}; otherwise it is in the \code{rowData}. Note: Users
should check whether the default created design matrix is exactly what they
want or create their own design matrix using
\code{\link[stats]{model.matrix}}.}

\item{contrast}{A numeric vector specifying one contrast of
the linear model coefficients to be tested equal to zero. Its length
must equal to the number of columns of design. If NULL, the last
coefficient will be tested equal to zero.}

\item{filter_min_count}{A numeric value. It's passed to \strong{min.count} of
\code{\link[edgeR]{filterByExpr}}.}

\item{filter_min_total_count}{A numeric value. It's passed to
\strong{min.total.count} of \code{\link[edgeR]{filterByExpr}}.}

\item{filter_large_n}{A numeric value. It's passed to \strong{large.n} of
\code{\link[edgeR]{filterByExpr}}.}

\item{filter_min_prop}{A numeric value. It's passed to \strong{min.prop} of
\code{\link[edgeR]{filterByExpr}}.}

\item{normalize}{A logical value, TRUE or FALSE. The default is TRUE.}

\item{normalize_method}{Normalization method to be used. See
\code{\link[edgeR]{calcNormFactors}} for more details.
It could be "bonferroni", "holm", "hochberg", "hommel", "BH", or "BY". This
is passed to \code{adjust.method} of \code{\link[edgeR]{topTags}}}

\item{group_column}{The column name of group}

\item{design_terms}{The names of columns from \code{colData} (if samples in
columns) that are used to generate design matrix. This is ignored if
\strong{design} is provided.}

\item{message}{A logical value, TRUE or FALSE. If TRUE, the running process
is printed out.}

\item{...}{More arguments to pass to \code{\link[edgeR]{glmFit}}
(\code{option = "glm"} or \code{\link[edgeR]{glmQLFit}} (\code{option =
"glmQL"}).}
}
\value{
a list includes \strong{edgeR_results}, \strong{tree}, and
  \strong{nodes_drop}.
\describe{
  \item{edgeR_results} {A list, each of its element is the output of
  \code{\link[edgeR]{glmQLFTest}} or \code{\link[edgeR]{glmLRT}} depends on
  the specified \code{option}. The list is named by the alias label of nodes}
  \item{tree} {The hiearchical structure of entities that was stored in the
     input \code{tse}}
  \item{nodes_drop} {A vector storing the alias node labels of entities. 
     These nodes have no sufficient data to run analysis. }
}
}
\description{
\code{runDA} tests differential state of entities using functions from the
\code{\link{edgeR}}. This adapts \code{\link{edgerWrp}} to accept input as a
\code{\link[SummarizedExperiment]{SummarizedExperiment}} (\strong{SE}) object
instead of \code{matrix}. To clarify, the count table is stored in the
\code{assays} table of \strong{SE} object. Each matrix in \code{assays}
stores data corresponding to a node of the tree. Samples are in columns and
features, e.g., genes or antibodies, are in rows. The sample information is
in \code{colData}. The tree that stores the hierarchical information about
the \code{assays} is provided via the argument \code{tree}. \code{assays} are
named with the alias labels of nodes that could be mapped to the provided
tree. The experimental design is specified by a design matrix and provide to
model via the argument \code{design}. Alternatively, users could specify the
name of columns (from \code{colData}) that are passed to
\code{\link[stats]{model.matrix}} to generate the design matrix.
}
\examples{

library(TreeSummarizedExperiment)

data(tinyTree)

set.seed(1)
# data: genes in rows, cells in columns
ncell <- 500
ngene <- 20
dat <- matrix(rpois(ngene*ncell, lambda = 20), nrow = ngene)

# cells belong to different clusters
clus <- sample(tinyTree$tip.label, 500, replace = TRUE)
sid <- sample(1:4, 500, replace = TRUE)
gid <- ifelse(sid \%in\% 1:2, "A", "B")
colD <- data.frame(cluster_id = clus,
                   sample_id = sid,
                   group = gid,
                   stringsAsFactors = FALSE)
# TreeSummarizedExperiment object
d_tse <- TreeSummarizedExperiment(
            assays = list(dat),
            colData = colD,
            colTree = tinyTree, 
            colNodeLab = clus)
d_se <- aggDS(TSE = d_tse, 
              assay = 1, sample_id = "sample_id",
              group_id = "group",
              cluster_id = "cluster_id", FUN = sum)

res <- runDS(SE = d_se, tree = tinyTree, 
             option = "glm", group_column = "group",
             design_terms = "group")
topNodes(res, type = "DS")
}
\author{
Ruizhu Huang
}
