% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viewPath.R
\name{viewPath}
\alias{viewPath}
\title{Visualize the tree paths
viewPath shows all paths on the tree. Each connects a leaf to the root. Users
could decide what to display on the x and y axis. The data show on x and y
axis should be provided as a data frame.}
\usage{
viewPath(tree, data_frame, node_column, y_axis_column,
  x_axis_column = NULL, y_lab = NULL, x_lab = NULL, node_true,
  lab_true, col_true, node_found, legend_title_found = "Found",
  legend_title_true = "Truth", only_true_path = FALSE,
  point_size = 2, point_stroke = 2, point_shape = 21, log_x = TRUE,
  log_y = TRUE)
}
\arguments{
\item{tree}{A phylo object.}

\item{data_frame}{A data frame. It should include at least a column of node
(number), and a column of score values that is to show on the y-axis of the
figure.}

\item{node_column}{A column name in \code{data_frame}. The column stores the
node number.}

\item{y_axis_column}{A column name in \code{data_frame}. The column will be
shown on the y axis of the figure.}

\item{x_axis_column}{A column name in \code{data_frame}. The column will be
shown on the y-axis of the figure. If NULL (default), the number of
descendant leaves is automatically generated and used.}

\item{y_lab}{A character to be used as the label of y-axis.}

\item{x_lab}{A character to be used as the label of x-axis.}

\item{node_true}{A character or numeric vector. It gives the truth: the nodes
with signal (with different levels under different conditions).}

\item{lab_true}{A character vector. It has the same length as
\code{node_true} and provides the information about the signal direction
(e.g. up or down).}

\item{col_true}{A vector of colors. It should be named using the elements of
\code{lab_true}.}

\item{node_found}{A character or numeric vector. It gives the nodes that are
found.}

\item{legend_title_found}{A legend title of the found.}

\item{legend_title_true}{A legend title of the truth.}

\item{only_true_path}{A logical value, TRUE or FALSE. If TRUE, only paths
with signal are shown. The default is FALSE}

\item{point_size}{A numeric value to specify the point size}

\item{point_stroke}{A numeric value to specify the point stroke}

\item{point_shape}{A numeric value to specify the point shape}

\item{log_x}{A logic value, TRUE or FALSE. It decides whether x-axis should
be displayed in log scale}

\item{log_y}{A logic value, TRUE or FALSE. It decides whether y-axis should
be displayed in log scale}
}
\description{
Visualize the tree paths
viewPath shows all paths on the tree. Each connects a leaf to the root. Users
could decide what to display on the x and y axis. The data show on x and y
axis should be provided as a data frame.
}
\examples{
  
library(TreeSummarizedExperiment)
library(ggtree)
library(ggplot2)
data("tinyTree")
ggtree(tinyTree, branch.length = "none") + 
    geom_text2(aes(label = node)) +
    geom_hilight(node = 13, fill = "orange", alpha = 0.4) +
    geom_hilight(node = 18, fill = "blue", alpha = 0.4)


set.seed(1)
sv <- c(0.8, 0.83, 0.86, -0.8, -0.85, 
        runif(7, -0.5, 0.5), 0.95, 0.9,
        runif(3, -0.7, 0), -0.9, 0.3)
pair <- cbind(11, 1:19)
dist <- apply(pair, 1, FUN= function(x) {
                distNode(tree = tinyTree, node = x)
                })
dat <- data.frame(node = 1:19, score = round(sv, 2),
                  dist = dist)

# score in red, node in blue
ggtree(tinyTree, branch.length = "none") \%<+\% dat + 
    geom_text2(aes(label = node), color = "blue", vjust = 1) +
    geom_text2(aes(label = score), color = "red", vjust = -0.5) +
    geom_hilight(node = 13, fill = "orange", alpha = 0.4) +
    geom_hilight(node = 18, fill = "blue", alpha = 0.4)

# The score (red textS in figure above) is now in y-axis,
# the x-axis is the number of descendant leaves of the corresponding node
viewPath(tree = tinyTree, data_frame = dat,
         node_column = "node", y_axis_column = "score", 
         node_true = c(13, 18), lab_true = c("up", "down"),
         col_true = c("up" = "orange", "down" = "blue"), 
         node_found = c(13, 18), log_x = FALSE, log_y = FALSE)

# the x-axis is the distance between the node and the root         
viewPath(tree = tinyTree, data_frame = dat,
         node_column = "node", y_axis_column = "score", 
         x_axis_column = "dist",
         node_true = c(13, 18), lab_true = c("up", "down"),
         col_true = c("up" = "orange", "down" = "blue"), 
         node_found = c(13, 18), log_x = FALSE, log_y = FALSE)

}
\author{
Ruizhu Huang
}
